#version 330

layout (location=0) in vec3 in_position;
layout (location=1) in vec2 in_uvs;
layout (location=2) in vec3 in_normals;
layout (location=3) in vec3 in_tangents;

out vec3 pass_position;
out vec2 pass_uvs;
out float pass_dist;

uniform mat4 projections;
uniform mat4 transformations;

void main(void){

	vec4 position = vec4(in_position.x, in_position.y, in_position.z, 1.0);
	gl_Position = projections * transformations * position;
	
	vec4 esVert = transformations * vec4(in_position.x, in_position.y, in_position.z, 1.0f);
	vec4 esObjOrigin = transformations * vec4(0,0,0,1);
	float distToCamera = -esVert.z;
	float distToOrigin = -esObjOrigin.z;
	pass_dist = distToOrigin - distToCamera;
	
	pass_position = vec3(transformations * position);
	pass_uvs = in_uvs;
}